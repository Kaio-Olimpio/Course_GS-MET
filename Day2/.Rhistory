library(kableExtra)
require(RCurl)
require(data.table)
require(AGHmatrix)
require(rrBLUP)
require(BGLR)
require(tidyverse)
require(ComplexHeatmap)
require(patchwork)
require(cvTools)
means2<-ddply(adjmeans,.(geno), summarize, Y=mean(Y,na.rm=T), M=mean(M,na.rm=T),  h1=mean(h1,na.rm=T), h2=mean(h2,na.rm=T), h3=mean(h3,na.rm=T), h4=mean(h4,na.rm=T)  )
library(reshape)
means2<-ddply(adjmeans,.(geno), summarize, Y=mean(Y,na.rm=T), M=mean(M,na.rm=T),  h1=mean(h1,na.rm=T), h2=mean(h2,na.rm=T), h3=mean(h3,na.rm=T), h4=mean(h4,na.rm=T)  )
require(plyr)
means2<-ddply(adjmeans,.(geno), summarize, Y=mean(Y,na.rm=T), M=mean(M,na.rm=T),  h1=mean(h1,na.rm=T), h2=mean(h2,na.rm=T), h3=mean(h3,na.rm=T), h4=mean(h4,na.rm=T)  )
adjmeans = read.csv("https://raw.githubusercontent.com/samuelbfernandes/Trait-assisted-GS/master/means.csv")
adjmeans$GENO = as.factor(adjmeans$GENO)
adjmeans$LOC = as.factor(adjmeans$LOC)
means2<-ddply(adjmeans,.(geno), summarize, Y=mean(Y,na.rm=T), M=mean(M,na.rm=T),  h1=mean(h1,na.rm=T), h2=mean(h2,na.rm=T), h3=mean(h3,na.rm=T), h4=mean(h4,na.rm=T)  )
head(adjmeans)
head(adjmeans)%>% kbl(escape = F, align = 'c') %>%
kable_classic("hover",full_width = F, position="center", fixed_thead = T)
means2<-ddply(means,.(Geno), summarize, Y=mean(Y,na.rm=T), M=mean(M,na.rm=T),  h1=mean(h1,na.rm=T), h2=mean(h2,na.rm=T), h3=mean(h3,na.rm=T), h4=mean(h4,na.rm=T)  )
means2<-ddply(adjmenas,.(Geno), summarize, Y=mean(Y,na.rm=T), M=mean(M,na.rm=T),  h1=mean(h1,na.rm=T), h2=mean(h2,na.rm=T), h3=mean(h3,na.rm=T), h4=mean(h4,na.rm=T)  )
means2<-ddply(adjmeans,.(Geno), summarize, Y=mean(Y,na.rm=T), M=mean(M,na.rm=T),  h1=mean(h1,na.rm=T), h2=mean(h2,na.rm=T), h3=mean(h3,na.rm=T), h4=mean(h4,na.rm=T)  )
means2<-ddply(adjmeans,.(GENO), summarize, Y=mean(Y,na.rm=T), M=mean(M,na.rm=T),  h1=mean(h1,na.rm=T), h2=mean(h2,na.rm=T), h3=mean(h3,na.rm=T), h4=mean(h4,na.rm=T)  )
means2
adjmeans
adjmeans2 = adjmeans %>%
left_join(data.frame(GENO = levels(adjmeans$GENO),
ID = 1:nlevels(adjmeans$GENO)), by = "GENO") %>%
mutate(ID = as.factor(ID))
adjmeans2
adjmeans2 = adjmeans %>% group_by(GENO) %>% summarise(Y = mean(Y))
adjmeans2
adjmeans
adjmeans %>% group_by(GENO)
mean(adjmeans$Y)
adjmeans2 = adjmeans %>% group_by(GENO) %>% summarise(Y = mean(Y, na.rm=T))
adjmeans2
adjmeans %>% group_by(GENO)
rm(list=ls())
adjmeans = read.csv("https://raw.githubusercontent.com/samuelbfernandes/Trait-assisted-GS/master/means.csv")
adjmeans$GENO = as.factor(adjmeans$GENO)
adjmeans$LOC = as.factor(adjmeans$LOC)
nfolds = 3
nrept = 6
adjmeans = adjmeans %>% arrange(GENO)
SNPs = SNPs[order(row.names(SNPs)),]
SNPs = fread("https://raw.githubusercontent.com/samuelbfernandes/Trait-assisted-GS/master/snps.csv")
names_lines = SNPs[,1]
SNPs = SNPs[,-1]
SNPs = as.matrix(SNPs[1:dim(SNPs)[1], 1:dim(SNPs)[2]])
rownames(SNPs) = names_lines$V1
dim(SNPs)
length(levels(adjmeans$GENO))
adjmeans = droplevels(adjmeans[adjmeans$GENO %in% rownames(SNPs), ])
length(levels(adjmeans$GENO))
nfolds = 3
nrept = 6
adjmeans
adjmeans = adjmeans %>% arrange(GENO)
SNPs = SNPs[order(row.names(SNPs)),]
names = as.numeric(as.factor(rownames(SNPs)))
names
adjmeans$geno = NA
dim(adjmeans)
for(i in 1:453){
means$geno[which(rownames(snps)[i]==means$GENO)]<-names[i]
}
adjmeans$geno[which(rownames(snps)[i]==adjmeans$GENO)]<-names[i]
for(i in 1:453){
adjmeans$geno[which(rownames(snps)[i]==adjmeans$GENO)]<-names[i]
}
adjmeans$geno = NA
for(i in 1:453){
adjmeans$geno[which(rownames(SNPs)[i]==adjmeans$GENO)]<-names[i]
}
adjmeans
which(rownames(SNPs)[i]==adjmeans$GENO)
adjmeans
adjmeans
adjmeans %>% group_by(geno) %>% summarise(Y = mean(Y, na.rm = T))
adjmeans
adjmeans$geno
adjmeans %>% group_by(LOC) %>% summarise(Y = mean(Y, na.rm = T))
adjmeans %>% group_by(LOC)
